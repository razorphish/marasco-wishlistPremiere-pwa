{"version":3,"sources":["webpack:///./src/app/features/marasco/features/profile/profile.module.ts","webpack:///./src/app/features/marasco/features/profile/profile.routing.ts","webpack:///./src/app/features/marasco/shared/activitylog.subject-service.ts"],"names":[],"mappings":"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","file":"features-profile-profile-module.js","sourcesContent":["import { NgModule } from '@angular/core';\n\nimport { routing } from './profile.routing';\nimport { SharedModule } from '@app/features/marasco/shared/shared.module';\nimport { ActivityLogSubjectService } from '../../shared/activitylog.subject-service';\nimport { SettingsModule } from '../wishlistPremiere/wishlists/shared/settings/settings.module';\n\n@NgModule({\n  imports: [SettingsModule, SharedModule, routing],\n  declarations: [],\n  providers: [ActivityLogSubjectService]\n})\nexport class ProfileModule {}\n","import { Routes, RouterModule } from '@angular/router';\n\nexport const routes: Routes = [\n  {\n    path: '', redirectTo: 'profile', pathMatch: 'full'\n  },\n  {\n    path: 'profile',\n    loadChildren: './user/user-profile.module#UserProfileModule',\n  }\n];\n\nexport const routing = RouterModule.forChild(routes);\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport * as moment from 'moment';\n\n@Injectable()\nexport class ActivityLogSubjectService {\n  public store: any = {\n    errors: [],\n    updates: [],\n    gets: [],\n    inserts: [],\n    lastUpdated: ''\n  };\n\n  private subject;\n  private _activityLogName = 'activityLog';\n\n  constructor() {\n    this.subject = new Subject();\n    this.activate();\n  }\n\n  activate() {\n    const store = localStorage.getItem(this._activityLogName);\n\n    if (store) {\n      this.store = JSON.parse(store);\n    } else {\n      this.store.lastUpdated = moment();\n      this.store.gets.push('Init Get');\n      this.setActivityLog(this.store);\n    }\n\n    this.subject.next(this.store);\n  }\n\n  subscribe(next, error?, complete?) {\n    this.subject.subscribe(next, error, complete);\n  }\n\n  addError(error) {\n    this.store.errors.push(error);\n    this.store.lastUpdated = moment();\n    this.setActivityLog(this.store);\n    this.subject.next(this.store);\n  }\n\n  addUpdate(updateMessage: string) {\n    this.store.updates.push(updateMessage);\n    this.store.lastUpdated = moment();\n    this.setActivityLog(this.store);\n    this.subject.next(this.store);\n  }\n\n  addGet(getMessage: string) {\n    this.store.gets.push(getMessage);\n    this.store.lastUpdated = moment();\n    this.setActivityLog(this.store);\n    this.subject.next(this.store);\n  }\n\n  addInserts(insertMessage: string) {\n    this.store.inserts.push(insertMessage);\n    this.store.lastUpdated = moment();\n    this.setActivityLog(this.store);\n    this.subject.next(this.store);\n  }\n\n  refresh() {\n    this.store = {\n      errors: [],\n      updates: [],\n      gets: [],\n      inserts: [],\n      lastUpdated: ''\n    };\n\n    this.setActivityLog(this.store);\n    this.subject.next(this.store);\n  }\n\n  private setActivityLog(store) {\n    localStorage.setItem(this._activityLogName, JSON.stringify(store));\n  }\n}\n"],"sourceRoot":""}